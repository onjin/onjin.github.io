{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<ul> <li>https://github.com/onjin\u00a0\u29c9</li> <li>https://www.linkedin.com/in/onjin/\u00a0\u29c9</li> </ul>"},{"location":"#my-projects","title":"My projects","text":"<ul> <li>mkchangelog\u00a0\u29c9 - Generate <code>CHANGELOG.md</code> from <code>git log</code> using conventional commits\u00a0\u29c9</li> <li>runenv\u00a0\u29c9 - Wrapper to run programs with different env or load env from .env file</li> <li>nvim\u00a0\u29c9 - my <code>neovim</code> configuration</li> <li>nix-dev\u00a0\u29c9 - dev environments setup using <code>flakes</code></li> <li>vim-startup\u00a0\u29c9 - quick way to start with vim &amp; python</li> <li>liquimigrate\u00a0\u29c9 - django integration for Liquibase\u00a0\u29c9 migrations</li> <li>docker-alpine-postgres\u00a0\u29c9 - Small PostgreSQL images (~58MB) for versions 9.1 - 9.5</li> <li>docker-php-oracle\u00a0\u29c9 - docker image for php with oracle db support (trusted image)</li> <li>ejpiaj\u00a0\u29c9 - declarative way API testing suite (small python package)</li> <li>docker\u00a0\u29c9 - other docker images</li> </ul>"},{"location":"#my-websites","title":"My websites","text":"<ul> <li>tani-ebook\u00a0\u29c9 - portal to get or buy e-books (Polish)</li> </ul>"},{"location":"blog/extend-lvm2-filesystem/","title":"extend lvm2 filesystem","text":"<p>Just self memo</p> <pre><code># Added new physical partition /dev/sda3\n# create a physical volume out of it\n$ pvcreate /dev/sda3\n\n\n# Now, add it to the volume group\n#that my logical volume is on\n$ vgextend VolGroup00 /dev/sda3\n\n\n# Now that the volume group has more\n# disk space, the logical volume can grow\n$ lvextend -L+11G /dev/VolGroup00/LogVol00\n\n\n# Ok, last of all, I want to filesystem to\n# recognize that more space is available\n$ fsadm resize /dev/VolGroup00/LogVol00\n\n# sweet, I have more space now\n$ df -h\n</code></pre>","tags":["hosting","tools"]},{"location":"blog/fast-sentry-instance-using-docker/","title":"Fast sentry instance using docker","text":"<p>How to quickly spin up private Sentry\u00a0\u29c9 instance using only docker.</p>","tags":["develop","docker","linux"]},{"location":"blog/fast-sentry-instance-using-docker/#requirements","title":"Requirements","text":"<p>You need docker and postgresql database</p> <ul> <li>https://www.docker.com/</li> </ul>","tags":["develop","docker","linux"]},{"location":"blog/fast-sentry-instance-using-docker/#running","title":"Running","text":"<p>If you have docker installed and postgres database created you can:</p> <pre><code># pull sentry image\ndocker pull onjin/sentry\n\n# install sentry database\ndocker run  \\\n    -e SENTRY_DBHOST=your.db.address \\\n    -e SENTRY_DBNAME=sentrydbname \\\n    -e SENTRY_DBUSER=dbuser \\\n    -e SENTRY_DBPASS=dbpass \\\n    -p :7365 onjin/sentry upgrade\n\n# run sentry instance\ndocker run -d \\\n    -e SENTRY_DBHOST=your.db.address \\\n    -e SENTRY_DBNAME=sentrydbname \\\n    -e SENTRY_DBUSER=dbuser \\\n    -e SENTRY_DBPASS=dbpass \\\n    -p :7365 onjin/sentry start\n</code></pre> <p>and open browser at address:</p> <ul> <li>host: http://localhost:7365/</li> </ul>","tags":["develop","docker","linux"]},{"location":"blog/python-soap-server-flask--wsdl-generation/","title":"Python SOAP server (flask) + wsdl generation","text":"<p>Simple tutorial how quickly create SOAP server using python \"Flask-Enterprise\" package for \"flash\" web framework. Example comes with basic client using \"suds\" package.</p>","tags":["programming","python","webdev","flask"]},{"location":"blog/python-soap-server-flask--wsdl-generation/#install","title":"Install","text":"<pre><code>$ pip install Flask-Enterprise\n</code></pre>","tags":["programming","python","webdev","flask"]},{"location":"blog/python-soap-server-flask--wsdl-generation/#create-app-file","title":"Create app file","text":"soap.py<pre><code>from time import ctime\nfrom flask import Flask\nfrom flaskext.enterprise import Enterprise\n\napp = Flask(__name__)\n\nenterprise = Enterprise(app)\n\n\nclass DemoService(enterprise.SOAPService):\n    __soap_server_address__ = '/soap'\n    __soap_target_namespace__ = 'ns'\n\n    @enterprise.soap(_returns=enterprise._sp.String)\n    def get_time(self):\n        return ctime()\n\nif __name__ == '__main__':\n    app.run(host='127.0.0.1', port=5555)\n</code></pre>","tags":["programming","python","webdev","flask"]},{"location":"blog/python-soap-server-flask--wsdl-generation/#run-service","title":"Run service","text":"<pre><code>$ python soap.py\n</code></pre>","tags":["programming","python","webdev","flask"]},{"location":"blog/python-soap-server-flask--wsdl-generation/#create-client","title":"Create client","text":"client.py<pre><code>from suds.client import Client\n\nc = Client('http://127.0.0.1:5555/soap?wsdl')\nprint c.service.get_time()\n</code></pre>","tags":["programming","python","webdev","flask"]},{"location":"blog/python-soap-server-flask--wsdl-generation/#run-test","title":"Run test","text":"<pre><code>$ python client.py\nTue Aug 13 19:49:53 2013\n</code></pre>","tags":["programming","python","webdev","flask"]},{"location":"blog/quiet-please--disable-audio-bell-in-gvim/","title":"quiet please !! disable audio bell in gvim","text":"<p>I don't want to hear it any more, so I've put this into .vimrc</p> <pre><code>\" quiet pleeeeeease\n\nif has('autocmd')\n    autocmd GUIEnter * set visualbell t_vb=\nendif\n</code></pre>","tags":["vim"]},{"location":"blog/rescan-scsi-bus-no-reboot/","title":"Rescan SCSI bus (no reboot)","text":"<p>Just self memo. How to attach new SCSI disk without reboot (debian):</p> <pre><code># check what hosts do you have\nls /sys/class/scsi_host\nhost0 host1 host2 host3\n\n# change 'host0' to 'host1' or any next number that you need\necho \"- - -\" &gt; /sys/class/scsi_host/host0/scan\n</code></pre> <p>and done ...</p> <pre><code>$ fdisk -l\n</code></pre>","tags":["linux","tools"]},{"location":"blog/archive/2013/","title":"2013","text":""},{"location":"blog/archive/2012/","title":"2012","text":""},{"location":"blog/tags/","title":"Tags","text":""},{"location":"blog/tags/#develop","title":"develop","text":"<ul> <li>Fast sentry instance using docker</li> </ul>"},{"location":"blog/tags/#docker","title":"docker","text":"<ul> <li>Fast sentry instance using docker</li> </ul>"},{"location":"blog/tags/#flask","title":"flask","text":"<ul> <li>Python SOAP server (flask) + wsdl generation</li> </ul>"},{"location":"blog/tags/#hosting","title":"hosting","text":"<ul> <li>extend lvm2 filesystem</li> </ul>"},{"location":"blog/tags/#linux","title":"linux","text":"<ul> <li>Fast sentry instance using docker</li> <li>Rescan SCSI bus (no reboot)</li> </ul>"},{"location":"blog/tags/#programming","title":"programming","text":"<ul> <li>Python SOAP server (flask) + wsdl generation</li> </ul>"},{"location":"blog/tags/#python","title":"python","text":"<ul> <li>Python SOAP server (flask) + wsdl generation</li> </ul>"},{"location":"blog/tags/#tools","title":"tools","text":"<ul> <li>extend lvm2 filesystem</li> <li>Rescan SCSI bus (no reboot)</li> </ul>"},{"location":"blog/tags/#vim","title":"vim","text":"<ul> <li>quiet please !! disable audio bell in gvim</li> </ul>"},{"location":"blog/tags/#webdev","title":"webdev","text":"<ul> <li>Python SOAP server (flask) + wsdl generation</li> </ul>"}]}