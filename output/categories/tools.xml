<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>marekwywial (tools)</title><link>http://marekwywial.name/</link><description>never is often better than *right* now</description><atom:link href="http://marekwywial.name/categories/tools.xml" type="application/rss+xml" rel="self"></atom:link><lastBuildDate>Thu, 11 Feb 2016 22:34:13 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Rescan SCSI bus (no reboot)</title><link>http://marekwywial.name/posts/blog20120705rescan-scsi-bus-no-reboot.html</link><description>&lt;p&gt;Just self memo. How to attach new SCSI disk without reboot (debian):&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# check what hosts do you have
&lt;/span&gt;ls /sys/class/scsi_host
host0 host1 host2 host3

&lt;span class="c"&gt;# change 'host0' to 'host1' or any next number that you need
&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"- - -"&lt;/span&gt; &amp;amp;gt; /sys/class/scsi_host/host0/scan
&lt;/pre&gt;
&lt;p&gt;# and done&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
fdisk -l
&lt;/pre&gt;</description><category>linux</category><category>tools</category><guid>http://marekwywial.name/posts/blog20120705rescan-scsi-bus-no-reboot.html</guid><pubDate>Thu, 05 Jul 2012 06:16:42 GMT</pubDate></item><item><title>extend lvm2 filesystem</title><link>http://marekwywial.name/posts/blog20120427extend-lvm2-filesystem.html</link><description>&lt;p&gt;Just self memo&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
&lt;span class="c"&gt;# Added new physical partition /dev/sda3
# create a physical volume out of it
&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;pvcreate /dev/sda3


&lt;span class="c"&gt;# Now, add it to the volume group
#that my logical volume is on
&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;vgextend VolGroup00 /dev/sda3


&lt;span class="c"&gt;# Now that the volume group has more
# disk space, the logical volume can grow
&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;lvextend -L+11G /dev/VolGroup00/LogVol00


&lt;span class="c"&gt;# Ok, last of all, I want to filesystem to
# recognize that more space is available
&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;fsadm resize /dev/VolGroup00/LogVol00

&lt;span class="c"&gt;# sweet, I have more space now
&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;df -h
&lt;/pre&gt;</description><category>hosting</category><category>tools</category><guid>http://marekwywial.name/posts/blog20120427extend-lvm2-filesystem.html</guid><pubDate>Fri, 27 Apr 2012 08:30:44 GMT</pubDate></item><item><title>Grooveshark currentSong.txt + gajim status</title><link>http://marekwywial.name/posts/blog20110319grooveshark-currentsong-txt-gajim-status.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;Przy okazji szukania API do &lt;a href="http://grooveshark.com"&gt;grooveshark'a&lt;/a&gt; odkryłem plik &lt;b&gt;currentSong.txt&lt;/b&gt;, który jest tworzony przez &lt;em&gt;Grooveshark Desktop&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Kilka minut z vim'em i mamy skrypt napisany w python'ie, który odczytuje w/w plik i wrzuca informację o aktualnie odtwarzanym utworze jako status wybranego konta w &lt;a href="http://gajim.org"&gt;gajim'a&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Skrypt umożliwia także uruchomienie go w trybie monitorowania w/w pliku (wymana &lt;b&gt;pyinotify&lt;/b&gt;). Wtedy nasz status będzie zmieniany w chwili (chwilę potem :) ) zmiany utworu w Grooveshark Desktop.&lt;/p&gt;
&lt;p&gt;Całość można dowolnie używać/modyfikować, a pobrać można z serwiu &lt;a href="http://github.com"&gt;github.com&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://github.com/onjin/grooveshark2gajim"&gt;https://github.com/onjin/grooveshark2gajim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://onjin.github.com/grooveshark2gajim/"&gt;http://onjin.github.com/grooveshark2gajim/&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;Do działania wystarczy nam plik &lt;a href="https://github.com/onjin/grooveshark2gajim/raw/master/grov2gajim.py"&gt;grov2gajim.py&lt;/a&gt;. Umieszczamy go gdzieś na dysku i możemy używać.&lt;/p&gt;
&lt;div style="display: none"&gt;&lt;a href="http://www.atotaldetox.com/thc-marijuana-detox-kits/"&gt;&lt;b&gt;thc/marijuana detox kits&lt;/b&gt;&lt;/a&gt;.&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;</description><category>desktop</category><category>linux</category><category>muzyka</category><category>python</category><category>tools</category><guid>http://marekwywial.name/posts/blog20110319grooveshark-currentsong-txt-gajim-status.html</guid><pubDate>Sat, 19 Mar 2011 12:03:04 GMT</pubDate></item><item><title>vim snippetsemu i liquibase</title><link>http://marekwywial.name/posts/blog20100811vim-snippetsemu-i-liquibase.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;W &lt;a href="http://onjin.net/blog/2010/07/29/best-vim-plugins/"&gt;ostatnim wpisie&lt;/a&gt; pisałem o &lt;a href="http://www.vim.org/scripts/script.php?script_id=1318"&gt;snippetsEmu&lt;/a&gt; dla &lt;a href="http://www.vim.org/"&gt;vim&lt;/a&gt;'a, a dziś załączam &lt;a href="http://marekwywial.name/files/xml_snippets.vim"&gt;zestaw snippetów&lt;/a&gt;, których używam przy pracy z &lt;a href="http://www.liquibase.org/"&gt;liquibase&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Liquibase&lt;/strong&gt; to całkiem miłe narzędzie napisane w Javie do śledzenia, zarządzania i wprowadzania zmian w bazach danych. Zmiany opisuje się w pliku (plikach) xml i wpisywanie oraz pamiętanie tej składni można sobie uprościć przy pomocy vim'a i snippetów.&lt;/p&gt;

&lt;p&gt;Snippet umieszczamy razem z pozostałymi, najczęściej w &lt;strong&gt;.vim/after/ftplugin/&lt;/strong&gt;.

Najprościej zacząć otwierając np. &lt;em&gt;migration.xml&lt;/em&gt;, wpisując &lt;em&gt;lhelp&lt;/em&gt; i wcisnąć &lt;em&gt;TAB&lt;/em&gt;. Otrzymamy małą pomoc i możemy zaczynać wpisywać kolejną migrację :)&lt;/p&gt;

&lt;p&gt; » &lt;a href="http://marekwywial.name/files/xml_snippets.vim"&gt;xml_snippets.vim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description><category>programowanie</category><category>tools</category><category>vim</category><guid>http://marekwywial.name/posts/blog20100811vim-snippetsemu-i-liquibase.html</guid><pubDate>Wed, 11 Aug 2010 16:45:35 GMT</pubDate></item><item><title>best vim plugins</title><link>http://marekwywial.name/posts/blog20100729best-vim-plugins.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;Dziś robiłem porządki w ~/.vim/ . Aktualizacje do nowych wersji pluginów, wyrzucanie nieużywanych, porządki w ~/.vimrc. W trakcie tej pracy powstała lista pluginów, dzięki którym miło mi się pracuje&lt;/p&gt;
&lt;h4&gt;vimball&lt;/h4&gt;

&lt;p&gt;Plugin zajmujący się pluginami dostarczanymi w paczkach .vba i pozwalający też takie paczki tworzyć, w praktyce potrzeby mi by instalować paczki .vba&lt;br&gt;

 » &lt;a href="http://www.vim.org/scripts/script.php?script_id=1502"&gt;vimball&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;snippetsEmu&lt;/h4&gt;

&lt;p&gt;Emuluje zachowanie snippetów z TextMate. Na przykład w pliku sometest.py wpisujesz 'for&amp;lt;tab&amp;gt;', uzupełniasz brakujące miejsca poruszając się klawiszem &amp;lt;tab&amp;gt; i otrzymujesz pełną pętle. Inne użyteczne snippety dla pythona to: &lt;strong&gt;prop&lt;/strong&gt; - property, &lt;strong&gt;get&lt;/strong&gt; - def get_.., &lt;strong&gt;set&lt;/strong&gt; - def set_.., &lt;strong&gt;def&lt;/strong&gt; - def .., &lt;strong&gt;cm&lt;/strong&gt; - classmethod, &lt;strong&gt;cl&lt;/strong&gt; - class .. oraz &lt;strong&gt;ifn, ifmain, sb, sbu, sbl1, trye, tryf, tryef, unittest&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Domyślnie dostarczone są 32 zestawy snippetów dla wielu języków programowania, opisu oraz frameworków (django, rails, symfony).&lt;br&gt;

 » &lt;a href="http://www.vim.org/scripts/script.php?script_id=1318"&gt;snippetsEmu&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;neocomplcache&lt;/h4&gt;

&lt;p&gt;System tzw 'dopełniania' (podpowiadania) i to właśnie robi. Dopełnia nazwy metod, funkcji, atrybuty html, nazwy plików, itp. Trzeba po prostu zobaczyć i używać.&lt;br&gt;

 » &lt;a href="http://www.vim.org/scripts/script.php?script_id=2620"&gt;neocomplcache&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;project&lt;/h4&gt;

&lt;p&gt;Bardzo prosty i skuteczny system pozwalający w bocznym oknie przeglądać wybrane lub wszystkie pliki z jednego lub wielu projektów. Każdy projekt ma zdefiniowany katalog, dzięki czemu otwarcie pliku z projektu (wciskamy 'enter' bedąc 'nad' plikiem) nastąpi równocześnie z przejściem do katalogu projektu. W ten sposób pliki projektu jak np 'tags' (ctags) zostaną poprawnie wczytane.&lt;br&gt;

 » &lt;a href="http://www.vim.org/scripts/script.php?script_id=69"&gt;project&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;simple pairs&lt;/h4&gt;

&lt;p&gt;Proste dopełnianie dla ", ', {, (, [ . Wpisanie znaku otwierającego powoduje automatyczne dopisanie znaku zamykającego. W przypadku {, (, [ gdy sami wpiszemy znak zamykający, nie zostanie on zdublowany. Kursor po prostu przesunie się dalej. Dla ", ' zostanie jednak stworzona kolejna para. Krótkie i skuteczne.&lt;br&gt;

 » &lt;a href="http://www.vim.org/scripts/script.php?script_id=2339"&gt;simple pairs&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;h4&gt;vcscommand&lt;/h4&gt;

&lt;p&gt;Plugin pozwalający wykonywać komendy dla CVS, SVN, SVK, git, bzr, and hg przy pomocy vim'a. Jeden zestaw komend bez względy na system kontroli wersji.&lt;br&gt;

 » &lt;a href="http://www.vim.org/scripts/script.php?script_id=90"&gt;vcscommand&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Niewiele tego, ale te pluginy, git (post/pre hooki), bash + zestaw skryptów wystarcza mi do pracy :)&lt;/p&gt;</description><category>programowanie</category><category>python</category><category>tools</category><category>vim</category><guid>http://marekwywial.name/posts/blog20100729best-vim-plugins.html</guid><pubDate>Thu, 29 Jul 2010 18:34:19 GMT</pubDate></item><item><title>Przydatne narzędzia do monitoringu obciążenia serwera ...</title><link>http://marekwywial.name/posts/blog20100103przydatne-narzedzia-do-monitoringu-obciazenia-serwera.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;... zamieścił &lt;a href="http://mekk.waw.pl/mk/" rel="nofollow"&gt;mekk&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://notatnik.mekk.waw.pl/archives/200-Oprocz_top.html" rel="nofollow"&gt;nie tylko top&lt;/a&gt;&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;&lt;/ul&gt;</description><category>server linux</category><category>tools</category><guid>http://marekwywial.name/posts/blog20100103przydatne-narzedzia-do-monitoringu-obciazenia-serwera.html</guid><pubDate>Sun, 03 Jan 2010 12:01:26 GMT</pubDate></item><item><title>awesome3 wm mouse/key bindings</title><link>http://marekwywial.name/posts/blog20091019awesome2-wm-mousekey-bindings.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;Tak na szybko z manuala do pdf'a do szybkiego wydruku cheatsheet dla window managera awesome 3 (it's awesome ;) ):&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="https://dl.dropboxusercontent.com/u/185133/marekwywial.name/files/awesome3_bindings.pdf"&gt;awesome3_bindings.pdf&lt;/a&gt;&lt;/li&gt;
&lt;p&gt;&lt;/p&gt;&lt;/ul&gt;</description><category>desktop</category><category>onjin</category><category>tools</category><category>wmanager</category><guid>http://marekwywial.name/posts/blog20091019awesome2-wm-mousekey-bindings.html</guid><pubDate>Mon, 19 Oct 2009 06:18:27 GMT</pubDate></item><item><title>ftpmount v1.1.0 - github</title><link>http://marekwywial.name/posts/blog20090622ftpmount-v110-github.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;div style="text-align: center; border-bottom: solid 1px gray; background: orange"&gt;sprawdź najnowszą wersję &lt;a href="http://onjin.net/index.php/category/ftpmount"&gt;ftpmount&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Przeniosłem skrypt ftpmount do github'a:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;a href="http://wiki.github.com/onjin/ftpmount"&gt;ftpmount&lt;/a&gt;&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;Równocześnie zmieniłem sposób konfiguracji, a raczej tylko domyślną nazwę pliku konfiguracyjnego. Teraz jest szukany plik:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;.ftpmountrc w aktualnym katalogu&lt;/li&gt;

&lt;li&gt;potem .ftpmountrc w katalogu domowym&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;Wersje &lt;a href="http://github.com/onjin/ftpmount/downloads"&gt;do pobrania&lt;/a&gt;.&lt;/p&gt;</description><category>ftpmount</category><category>git</category><category>linux</category><category>tools</category><category>webdev</category><guid>http://marekwywial.name/posts/blog20090622ftpmount-v110-github.html</guid><pubDate>Mon, 22 Jun 2009 09:30:35 GMT</pubDate></item><item><title>fuse ftp mount - curlftpfs</title><link>http://marekwywial.name/posts/blog20090621fuse-ftp-mount-curlftpfs.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;div style="text-align: center; border-bottom: solid 1px gray; background: orange"&gt;sprawdź najnowszą wersję &lt;a href="http://onjin.net/index.php/category/ftpmount"&gt;ftpmount&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;Do pracy z hostingiem gdzie mamy tylko '''ftp''' przydaje się montowanie dysku poprzez właśnie ftp. Służy do tego program '''curlftpfs''' (np apt-get install curlftpfs).&lt;/p&gt;
&lt;p&gt;Odpalamy go jako:&lt;/p&gt;
&lt;pre&gt;

curlftpfs ftp://user:pass@host/ ./mountpoint

&lt;/pre&gt;

&lt;p&gt;Do tego potrzebujemy uprawnienia grupy '''fuse''' więć jako ''root'' musimy sobie ją dodać od naszego użytkownika.&lt;/p&gt;
&lt;p&gt;Jeżeli mamy dużo połączeń do zarządzania przyda się mały skrypt:
 * &lt;a href="http://onjin.net/files/ftpmount"&gt;ftpmount&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;sterowany konfiguracją w pliku '''config.ini''':&lt;/p&gt;
&lt;pre&gt;

[hostone.pl]

host=ftp.hostone.pl

user=userone

pass=passone # jak nie podamy tego wpisu, program się zapyta o hasło

mountpoint=hostone.pl



[hosttwo.pl]

host=ftp.hosttwo.pl

user=usertwo

mountpoint=hosttwo.pl

&lt;/pre&gt;

&lt;p&gt;Wtedy wystarczy nam:
 * ./ftpmount hostone.pl   # montujemy połączenie
 * ./ftpmount -u hostone.pl   #odmontowywujemy połączenie
 * ./ftpmount -l   # lista dostępnych konfiguracji połączeń&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description><category>ftpmount</category><category>linux</category><category>tools</category><category>webdev</category><guid>http://marekwywial.name/posts/blog20090621fuse-ftp-mount-curlftpfs.html</guid><pubDate>Sun, 21 Jun 2009 17:11:10 GMT</pubDate></item><item><title>mutt &amp; firefox (by urlview)</title><link>http://marekwywial.name/posts/blog20090605mutt-firefox-by-urlview.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;w ubuntu wystarczyło:
&lt;/p&gt;&lt;pre&gt;
&lt;p&gt;apt-get install urlview&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;w ~/.muttrc dodane makro&lt;/p&gt;
&lt;pre&gt;

macro pager \\cb &amp;lt;pipe-entry&amp;gt;urlview&amp;lt;enter&amp;gt; 'Follow links with urlview'

&lt;/pre&gt;

&lt;p&gt;orac plik ~/.urlview:&lt;/p&gt;
&lt;pre&gt;

REGEXP ((http|https|ftp|gopher):(//)?[^ &amp;lt;&amp;gt;"\\t]*|www\\.[-a-z0-9.]+)[^ .,;\\t&amp;lt;"&amp;gt;\\):]

COMMAND /usr/bin/nohup firefox -remote "openURL("%s", new-tab)" &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;

&lt;/pre&gt;

&lt;p&gt;teraz ctrl+b zbiera linki z treści wiadomości, które otwieramy w wybranej przeglądarce ;)&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;</description><category>linux</category><category>tools</category><guid>http://marekwywial.name/posts/blog20090605mutt-firefox-by-urlview.html</guid><pubDate>Fri, 05 Jun 2009 08:53:55 GMT</pubDate></item></channel></rss>