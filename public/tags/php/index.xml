<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on Marek Wywiał</title>
    <link>https://marekwywial.name/tags/php/</link>
    <description>Recent content in php on Marek Wywiał</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 04 May 2010 07:52:53 +0000</lastBuildDate>
    
	<atom:link href="https://marekwywial.name/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git php syntax check pre-commit</title>
      <link>https://marekwywial.name/posts/blog20100504git-php-syntax-check-pre-commit/</link>
      <pubDate>Tue, 04 May 2010 07:52:53 +0000</pubDate>
      
      <guid>https://marekwywial.name/posts/blog20100504git-php-syntax-check-pre-commit/</guid>
      <description>Załączam używany przeze mnie i sprawdzający się pre-commit dla git&amp;lsquo;a sprawdzający commitowane pliki .php.
Przy wykonaniu commit w repozytorium skrypt dla każdego commitowanego pliku &amp;lsquo;.php&amp;rsquo; wykonuje &amp;lsquo;php -l&amp;rsquo; w pętli, aż otrzyma odpowiedź, że składnia jest ok lub nie ok. Przypadku wystąpienia błędy przerywa commit. Sam skrypt napisany jest w python&amp;lsquo;ie
Dlaczego w pętli? Dlatego, że &amp;lsquo;php -l&amp;rsquo; losowo się urywa zwracając SIGFAULT i należy wtedy powtórzyć próbę z &amp;lsquo;-l&amp;rsquo;</description>
    </item>
    
    <item>
      <title>git pre-commit hook - symfony / php</title>
      <link>https://marekwywial.name/posts/blog20090511git-pre-commit-hook-symfony-php/</link>
      <pubDate>Mon, 11 May 2009 10:25:43 +0000</pubDate>
      
      <guid>https://marekwywial.name/posts/blog20090511git-pre-commit-hook-symfony-php/</guid>
      <description>Mam jeszcze tą nieprzyjemnośc pracy z PHP (w tym przypadku z symfony framework) i aby była przyjemniejsza dodałem sobie hook na pre-commit do git&amp;rsquo;a. * http://dl.getdropbox.com/u/185133/git/pre-commit
by zadziałało przerywanie commit&amp;rsquo;a gdy &amp;lsquo;symfony unit-test&amp;rsquo; się nie udadzą, potrzebna jest łatka na symfony (przynajmniej na moją wersję 1.0.17) * http://dl.getdropbox.com/u/185133/git/symfony_return_code.diff
Hook zakłada, że commit jest robiony w katalogu projektu (tak mam najczęsciej) i znajduje sie w nim plik &amp;lsquo;symfony&amp;rsquo;
btw: hook wymaga pythona.</description>
    </item>
    
    <item>
      <title>lint dla php</title>
      <link>https://marekwywial.name/posts/blog20080902lint-dla-php/</link>
      <pubDate>Tue, 02 Sep 2008 21:01:02 +0000</pubDate>
      
      <guid>https://marekwywial.name/posts/blog20080902lint-dla-php/</guid>
      <description>Za dnia piszę najczęściej w php i zazdroszczę pythonowi pylinta.
Z ciekawości zagooglałem i znalazłem rozwiązanie dla PHP sprawdzające Coding Standard:
 pear install PHP_CodeSniffer phpcs --standard=Zend SomeTest.class.php  phpcs -i podaje dostępne standardy:
PEAR
MySource
PHPCS
Squiz
Zend
Mi najbardzie odpowiada Zend co widać po wynikach lintowania, najczęściej 0 ostrzeżeń i błędów ;).
phpcs pozwala także tworzyć swoje własne standardy kodowanie oraz - co bardzo mnie cieszy - podpiąć go jako precommit hook do svn&amp;rsquo;a.</description>
    </item>
    
    <item>
      <title>netbeans 6.5 &#43; php5 &#43; symfony &#43; xdebug</title>
      <link>https://marekwywial.name/posts/blog20080824netbeans-65-php5-symfony-xdebug/</link>
      <pubDate>Sun, 24 Aug 2008 14:17:12 +0000</pubDate>
      
      <guid>https://marekwywial.name/posts/blog20080824netbeans-65-php5-symfony-xdebug/</guid>
      <description>W Netbeans 6.5 pojawia się support dla php5. W/g informacji na stronie netbeans oznacza to:
 PHP Editor (Code completion, syntactic and semantic code highlighting) Support for heredoc notation and PHTML Debugging using Xdebug Generators for MySQL database code snippets  Temat, który najbardziej mnie interesował to jak zadziała debugging przy pomocy Xdebug. Postanowiłem sprawdzić to z istniejącym projektem bazującym na frameworku Symfony.
 Zainstalowałem netbeans pobierając odpowiednią paczkę ze strony netbeans Zainstalowałem Xdebug poprzez pecl install xdebug i dodaniu do konfiguracji php wierszy:  1 2 3  # xdebug, jako zend_extension.</description>
    </item>
    
  </channel>
</rss>