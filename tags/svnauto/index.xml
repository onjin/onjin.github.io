<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>svnauto on Marek Wywiał</title>
    <link>https://marek.wywiał.pl/tags/svnauto/</link>
    <description>Recent content in svnauto on Marek Wywiał</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Sun, 07 Jan 2007 00:00:57 +0000</lastBuildDate>
    
	<atom:link href="https://marek.wywiał.pl/tags/svnauto/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>automatyzacja pracy z svn - svnauto</title>
      <link>https://marek.wywiał.pl/posts/blog20070107automatyzacja-pracy-z-svn-svnauto/</link>
      <pubDate>Sun, 07 Jan 2007 00:00:57 +0000</pubDate>
      
      <guid>https://marek.wywiał.pl/posts/blog20070107automatyzacja-pracy-z-svn-svnauto/</guid>
      <description>SC jest skryptem napisanym w języku Rubyi jest dostępny poprzez RubyGems:
gem install svnauto --include-dependencies  Hmm, ale czemu to nie działa? Skrypt scbazuje na komunikatach zwracanych przez komendę svnw języku angielskim, więc nie będzie działać poprawnie w innych lokalizacjach. Można to rozwiązać np. tak:
mv /usr/bin/sc /usr/bin/sc.orig  stworzyć nowy plik /usr/bin/sc:
#!/bin/bash  LC_ALL=C /usr/bin/sc.orig $* i nadać mu prawa do wykonywania (w przypadku systemów Linux):
chmod 755 /usr/bin/sc  Podstawy na początek Standardowa praca z SC wygląda mniej więcej tak:
Konfigurujemy dostęp do naszego repozytorium (SC obsługuje ich wiele)
sc config --add  Tworzymy nowy projekt (zostaniemy zapytani o repozytorium, którego chcemy użyc)
sc create my-new-project  W naszym repozytorium zostanie dodany katalog my-new-project wraz ze strukturą:
myproject: | +--trunk | | | +--project-files | +--branches | | | +--rel | +--bug | +--exp | +--tags | +--rel +--bug +--exp Do katalogu ze zródłami lokalnymi (domyślnie ~/src, ale możemy to zmienić podczas konfigurowania repozytorium w SC) zostanie wyciągnięty trunk naszego nowego projektu do katalogu ~/src/nazwa_repozytorium/my-new-project-trunk.
W przypadku kolejnych pobrań projektu (np, na inną maszynę, dla innego użytkownika) wywołujemy komendę:
sc checkout my-new-project  i dostaniemy domyślnie źródła trunk&amp;rsquo;a do lokalnej kopii. Używając opcji w linii komend (-r, -b, -e) możemy pobrać odpowiednio wybrany release, bug lub eksperymentalną gałąź.</description>
    </item>
    
  </channel>
</rss>